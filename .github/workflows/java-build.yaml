# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle and RabbitMQ

# 이 워크플로우는 main 브랜치에 push 되거나 pull request 이벤트가 발생했을 때 실행됩니다.
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 워크플로우는 여러 잡(job)으로 구성될 수 있습니다. 이 예시에서는 "build"라는 하나의 잡을 정의했습니다.
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        # 리포지토리 코드 체크아웃

      - name: Set up Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose
        # Docker와 Docker Compose 설치

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
        # Java JDK 설정

      - name: Start RabbitMQ service
        run: docker-compose up -d rabbitmq
        # RabbitMQ 서비스 시작

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        # Gradle 래퍼 스크립트 실행 권한 부여

      - name: Build with Gradle
        run: ./gradlew build
        # Gradle 빌드 실행

      - name: Shutdown RabbitMQ service
        run: docker-compose down
        # RabbitMQ 서비스 종료
